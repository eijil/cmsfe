{"version":3,"sources":["../src/index.ts","../src/report/index.ts","../src/env.ts","../src/webview/type.ts","../src/webview/index.ts"],"sourcesContent":["\n\nexport { default as ReportSDK } from './report'\nexport { default as webview } from './webview'\n","\n'use client'\nimport { nanoid } from 'nanoid'\n\nimport pako from 'pako'\nimport { getEnv } from '../env'\nimport { Buffer } from 'buffer'\nimport { IParams, IReportParam, IEventReportParam } from './interface'\n\n\nconst env = getEnv()\n\n/** 记录上报过的id */\nlet reported: any = {}\n\nclass ReportSDK {\n  private VERSION: string\n  private APP_ID: string\n  private CHANNEL_ID: string\n  private PACKAGE_NAME: string\n  private REPORT_API: string\n\n  private static instance: ReportSDK\n\n  private constructor(params: IParams) {\n    this.REPORT_API = params.reportAPI\n    this.VERSION = params.version\n    this.APP_ID = params.appId\n    this.CHANNEL_ID = params.channelId\n    this.PACKAGE_NAME = params.packageName || 'h5'\n  }\n\n  public static getInstance(params: IParams): ReportSDK {\n\n   \n\n    if (!ReportSDK.instance) {\n      ReportSDK.instance = new ReportSDK(params)\n    }\n    return ReportSDK.instance\n  }\n\n  /**\n   * 通用上报\n   * @param param\n   */\n  public eventReport(\n    { event_name, sub_event_name, properties, ctime }: IEventReportParam,\n    key?: string\n  ): void {\n    if (key && reported[key]) {\n      return\n    }\n    const data = {\n      _event_name: event_name,\n      _sub_event_name: sub_event_name,\n      properties,\n    }\n    try {\n      this.reportHandle(data, ctime)\n    } catch (e) {\n      console.log('上报失败', e)\n    }\n    if (key) {\n      reported[key] = true\n    }\n  }\n\n  /**\n   * 加载页面上报\n   * @param {string} pageName 当前路由名\n   * @param {string} prePageName 前路由名\n   * @param {string} url 页面路径\n   * @param {string} _scene_name 场景\n   */\n  public pageEnter(params: {\n    _page_name: string\n    _pre_page_name: string\n    _url: string\n    project_id?: number\n    project_info?: any\n  }) {\n    this.reportHandle({\n      _event_name: 'm_page_enter',\n      properties: {\n        ...params,\n        _referrer_url: document?.referrer,\n      },\n    })\n  }\n\n  /**\n   * 应用安装激活\n   */\n  public installReport() {\n    const { uaParser } = env\n\n    let category = ''\n    if (env.isMobile) {\n      category = 'phone'\n    } else if (env.isTablet) {\n      category = 'tablet'\n    } else if (env.isMac) {\n      category = 'mac'\n    } else {\n      category = 'pc'\n    }\n\n    if (!localStorage.getItem('_app_install_id')) {\n      this.reportHandle({\n        _event_name: 'm_app_install',\n        properties: {\n          _device_brand: '', // 拿不到就是空\n          _device_model: '', // 拿不到就是空\n          _device_screen_h: window.screen.height,\n          _device_screen_w: window.screen.width,\n          _device_ram: 0, // 拿不到就是空\n          _device_lang: 'en',\n          _device_category: category, //设备类型 phone/tablet/pc/mac/\n          browser_brand: uaParser.browser.name,\n          browser_version: uaParser.browser.version,\n          _ua: navigator.userAgent,\n          _url: window.location.href,\n          _referrer_url: document?.referrer,\n        },\n      })\n    }\n  }\n\n  private getBaseInfo() {\n    const { uaParser } = env\n    const _os_type = uaParser.os.name ? uaParser.os.name.toLowerCase() : ''\n\n    const baseInfo = {\n      _app_id: this.APP_ID,\n      _app_channel_id: this.CHANNEL_ID,\n      _app_version: this.VERSION,\n      _package_name: this.PACKAGE_NAME,\n      _app_game_version: '', // 传空\n      _app_res_version: '', // 传空\n      _app_install_id: localStorage.getItem('_app_install_id') || '', // install_id\n      _app_activate_id: sessionStorage.getItem('_app_activate_id') || '', // 3.5 run_id\n      _device_id: '', // 传空\n      _ad_id: '', // 传空\n      _androidid: '', // 传空\n      _idfv: '', // 传空\n      _os_type, // 获取平台id\n      _os_version: '', // 有就报，没有就报空\n      _os_timezone_offset: `utc_offset=-8:00`,\n      _os_timestamp: Math.floor(new Date().getTime() / 1000), // 3.5 ctime\n      _device_network_type: 0,\n      _app_user_id: localStorage.getItem('uid') || '', // uuid\n      // @ts-ignore\n      _app_lang: navigator?.language || navigator?.userLanguage || '', // 浏览器语言\n      _event_name: '', // 之前的eid,A列的事件名称\n      _sub_event_name: '', // 子事件名称， 默认传空字符串\n      properties: {},\n    }\n    const h = new Date().getTimezoneOffset() / 60\n    const m = (new Date().getTimezoneOffset() % 60).toString().padStart(2, '0')\n    /** 时区 */\n    baseInfo._os_timezone_offset = `utc_offset=${h}:${m}`\n\n    /** 首次进入生成id */\n    if (!localStorage.getItem('_app_install_id')) {\n      const _app_install_id = nanoid()\n      baseInfo._app_install_id = _app_install_id\n      localStorage.setItem('_app_install_id', _app_install_id.toString())\n    }\n    /** 每次打开会话生成id */\n    if (!sessionStorage.getItem('_app_activate_id')) {\n      const _app_activate_id = nanoid()\n      baseInfo._app_activate_id = _app_activate_id\n      sessionStorage.setItem('_app_activate_id', _app_activate_id.toString())\n    }\n\n    return baseInfo\n  }\n\n  private reportHandle(params: IReportParam, ctime?: number) {\n    const reportInfo = this.getBaseInfo()\n    if (ctime) reportInfo._os_timestamp = ctime\n    const data = {\n      ...reportInfo,\n      ...params,\n    }\n    this.send(data)\n  }\n\n  /**\n   * 发送数据到服务端\n   */\n  private async send(data: any) {\n    console.log('上报信息', data)\n\n    const d = pako.deflate(JSON.stringify([data]))\n    const buffer = Buffer.from(d)\n    const result = await fetch(this.REPORT_API, {\n      method: 'POST',\n      body: buffer.toString('base64'),\n    }).catch((err) => {\n      console.log('上报失败', err)\n    })\n\n    return result\n  }\n}\n\nexport default ReportSDK\n","'use strict'\n\nimport { UAParser } from 'ua-parser-js'\n\n// 导出获取环境函数\nexport const getEnv = (userAgent?: string) => {\n  // 获取userAgent\n  userAgent = userAgent\n    ? userAgent\n    : typeof window !== 'undefined'\n      ? window.navigator.userAgent\n      : ''\n  // 创建UAParser\n  const uaParser = UAParser(userAgent)\n\n  const { device, ua, os } = uaParser\n  // 返回环境信息\n  return {\n    uaParser,\n    isMobile: device.type === 'mobile',\n    isFB: isFB(ua),\n    isAndroid: os.name === 'Android',\n    isIOS: os.name === 'iOS',\n    isTablet: device.type === 'tablet',\n    isMac: os.name === 'Mac OS'\n    \n  }\n}\n\n/*\n * 判断是否是FB\n */\nexport const isFB = (ua: string) => {\n  // 判断ua中是否包含FB相关字符串\n  return /FBAN|FBAV|FB_IAB|FB_IABV_SIMULATOR/.test(ua)\n}\n","/// <reference types=\"../globals.d.ts\" />\nexport type ICallback = (response?: any) => void\nexport interface WebviewParams {\n  callback?: ICallback\n  param?: Array<Array<any>>\n}\n\nexport class IWebView {\n  [key: string]: any\n}\n","'use client'\nimport { IWebView, WebviewParams, ICallback } from './type'\nlet i = 0\nconst UID_PREFIX = Date.now().toString()\nclass WebView extends IWebView {\n  // 回调函数存储池\n  private nativeCallback: Map<any, ICallback> = new Map()\n\n  public constructor() {\n    super()\n\n    if (typeof window === 'undefined') {\n      return\n    }\n    // 挂在回调函数\n     window.nativeCallback = (res?: any) => {\n      this.handleCallback(res)\n    }\n  }\n\n  /** * 直接调用api  */\n  public exec = (name: string, params?: WebviewParams) => {\n    return this.addApi(name)[name](params)\n  }\n\n  /** 增加一项新的Api */\n  public addApi = (name: string) => {\n    \n    if (!this[name]) {\n      this[name] = (params: WebviewParams) => {\n        // todo 通用参数在此处理\n        return this.run(name, params)\n      }\n      console.log(this)\n    }\n    return this\n  }\n\n  /**\n   * 新增回调\n   * */\n  public addCallback = (name: string | number, callback: ICallback) => {\n    this.nativeCallback.set(name, callback)\n  }\n\n  private getTrigger = (name: string): string => {\n    return (name || 'fn') + `${UID_PREFIX}-${i++}`\n  }\n\n  /** 调用接口 */\n  private run = (apiName: string, params: WebviewParams = {}) => {\n    const { callback, param = [] } = params\n    const _param = param\n    // 回调处理\n    if (typeof callback === 'function') {\n      const trigger = this.getTrigger(apiName)\n      this.addCallback(trigger, callback)\n      _param.unshift(['trigger', trigger])\n    }\n\n    console.log(_param)\n    this.iosMessage(apiName, _param)\n    this.androidMessage(apiName, _param)\n\n    if (window.webkit) {\n      // ios处理\n      this.iosMessage(apiName, _param)\n    } else if (window?.Android) {\n      // 安卓\n      this.androidMessage(apiName, _param)\n    } else {\n      // web端, 暂时不处理\n    }\n    return false\n  }\n\n  /** IOS通信 */\n  private iosMessage = (apiName: string, params: any[] = []) => {\n    const kit = window.webkit\n    const parma: { [key: string]: any } = {}\n    params.forEach((item) => {\n      parma[item[0]] = item[1]\n    })\n    console.log('ios', parma)\n    // 由于ISO不会抛出错误需要手动抛出\n    if (!kit?.messageHandlers?.[apiName]?.postMessage) {\n      //throw new Error('版本过低')\n    }\n    kit?.messageHandlers?.[apiName]?.postMessage?.(parma)\n  }\n\n  /** android通信 */\n  private androidMessage = (apiName: string, params: any[]) => {\n    const isPrama = !!params.length\n    if (isPrama) {\n      const para = params.map((item) => {\n        const [key, val] = item\n        return val\n      })\n      console.log('android', para)\n      return window?.Android?.[apiName](...para)\n    }\n    return window?.Android?.[apiName]()\n  }\n  /** 增强回调 */\n  private handleCallback = (res: any) => {\n    // todo 返回待完善\n    let param = res\n    if (typeof res === 'string') {\n      // 安卓的回调数据\n      try {\n        param = JSON.parse(res)\n      } catch (error) {\n        param = res\n      }\n    }\n    const { trigger, ...otehr } = param\n    this.nativeCallback.get(trigger)?.(otehr)\n  }\n}\n\nconst webview = new WebView()\n// 空的执行回调\n\nwebview.addCallback('reload', () => window.location.reload())\n\n/**\n * 如果登录挂载isApp = true 到 window对象上\n * 目前通过和客户端通信来检查是否在app内，主流做法通常是客户端在ua中插入特定信息\n * 客户端说以前的ua有在用，不敢往里面加信息\n * @returns Promise<boolean>\n */\n\nasync function checkIsApp(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    if (!window.webkit && !window.Android) {\n      resolve(false)\n    }\n\n    try {\n      webview.exec('getUserInfo', {\n        callback: (res) => {\n          console.log('checkIsApp', res)\n          resolve(true)\n        },\n      })\n    } catch (e) {\n      console.log('checkIsApp', e)\n      resolve(false)\n    }\n  })\n}\n\nexport { checkIsApp }\nexport default webview\n"],"mappings":"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","names":["pako"]}